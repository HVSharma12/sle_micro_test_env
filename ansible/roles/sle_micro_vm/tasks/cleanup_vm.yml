---
- name: Determine list of running VMs
  community.libvirt.virt:
    command: list_vms
  register: _list_vms

- name: Print found VMs if any
  ansible.builtin.debug:
    msg: "Currently defined VMs: {{ _list_vms.list_vms }}"
  when:
    - (_list_vms.list_vms | length) > 0

- name: If needed cleanup running VM {{ sle_micro_vm.name }}
  when:
    - sle_micro_vm.name in _list_vms.list_vms
  block:
    - name: If needed destroy running VM {{ sle_micro_vm.name }}
      community.libvirt.virt:
        name: "{{ sle_micro_vm.name }}"
        state: destroyed

    - name: If needed undefine VM {{ sle_micro_vm.name }}
      community.libvirt.virt:
        name: "{{ sle_micro_vm.name }}"
        command: undefine

    - name: Wait for cleanup of VM {{ sle_micro_vm.name }}
      community.libvirt.virt:
        command: list_vms
      register: _list_vms_check
      until:
        - sle_micro_vm.name not in _list_vms_check.list_vms
      retries: 30
      delay: 2

- name: Remove any extra disk for VM {{ sle_micro_vm.name }}
  become: true
  ansible.builtin.file:
    path: "{{ sle_micro_vm.image.file | replace(sle_micro_vm.name, sle_micro_vm.name ~ '_' ~ item.name) }}"
    state: absent
  loop: "{{ sle_micro_vm.extra_disks }}"

- name: Remove image file for VM {{ sle_micro_vm.name }}
  become: true
  ansible.builtin.file:
    path: "{{ sle_micro_vm.image.file }}"
    state: absent
